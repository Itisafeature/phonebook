{"version":3,"sources":["components/PersonForm.js","components/Search.js","components/Persons.js","components/Notification.js","services/PersonService.js","App.js","index.js"],"names":["PersonForm","handleNumberChange","handleNameChange","handleClick","newName","newNumber","onChange","value","onClick","type","Search","handleSearchChange","newSearch","Persons","persons","handleDelete","map","person","key","id","name","number","data-id","Notification","message","isError","className","personObj","axios","post","delete","foundPerson","put","App","useState","setPersons","setNewName","setNewNumber","setSearch","setMessage","setIsError","useEffect","a","get","fetched","concat","data","addPerson","event","preventDefault","find","window","confirm","personService","updatedPerson","setTimeout","target","filter","match","Number","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAsBeA,EApBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,mBACAC,EAFiB,EAEjBA,iBACAC,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,QACAC,EALiB,EAKjBA,UALiB,OAOjB,8BACE,sCACQ,2BAAOC,SAAUJ,EAAkBK,MAAOH,IADlD,WAEU,2BAAOE,SAAUL,EAAoBM,MAAOF,KAEtD,6BACE,4BAAQG,QAASL,EAAaM,KAAK,UAAnC,UCTSC,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,UAAvB,OACb,2BAAON,SAAUK,EAAoBJ,MAAOK,KCY/BC,EAbC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC1B,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,yBAAKC,IAAKD,EAAOE,IACf,4BACGF,EAAOG,KADV,KACkBH,EAAOI,OAAQ,IAC/B,4BAAQb,QAASO,EAAcO,UAASL,EAAOE,IAA/C,gBCCOI,EANM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC/B,OAAID,EACK,yBAAKE,UAAWD,EAAU,QAAU,gBAAiBD,GACvD,M,gBCUM,EAZA,SAAAG,GACb,OAAOC,IAAMC,KAAK,cAAeF,IAWpB,EAJM,SAAAR,GACnB,OAAOS,IAAME,OAAN,uBAA6BX,KAGvB,EARM,SAAAY,GACnB,OAAOH,IAAMI,IAAN,uBAA0BD,EAAYZ,IAAMY,ICwGtCE,EAxGH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTpB,EADS,KACAqB,EADA,OAEcD,mBAAS,IAFvB,mBAET9B,EAFS,KAEAgC,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT7B,EAHS,KAGEgC,EAHF,OAIeH,mBAAS,IAJxB,mBAITtB,EAJS,KAIE0B,EAJF,OAKcJ,mBAAS,MALvB,mBAKTV,EALS,KAKAe,EALA,OAMcL,oBAAS,GANvB,mBAMTT,EANS,KAMAe,EANA,KAQhBC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEACuBd,IAAMe,IAAI,gBADjC,OACOC,EADP,OAECT,EAAWrB,EAAQ+B,OAAOD,EAAQE,OAFnC,0CAAD,KAIC,IAEH,IAiBMC,EAAS,uCAAG,WAAMC,GAAN,qBAAAN,EAAA,yDAChBM,EAAMC,mBACAlB,EAAcjB,EAAQoC,MAAK,SAAAjC,GAAM,OAAIA,EAAOG,OAAShB,MAF3C,qBAKZ+C,OAAOC,QAAP,UACKhD,EADL,8EALY,wBASZ2B,EAAYV,OAAShB,EATT,kBAWkBgD,EAA2BtB,GAX7C,OAWJuB,EAXI,OAYVnB,EACErB,EAAQE,KAAI,SAAAC,GAAM,OAChBA,EAAOE,KAAOmC,EAAcnC,GAAKF,EAASqC,EAAcR,SAG5DP,EAAW,WAAD,OAAYe,EAAcR,KAAK1B,KAA/B,cACVmC,YAAW,WACThB,EAAW,QACV,KApBO,kDAsBVA,EAAW,GAAD,OACLR,EAAYX,KADP,mDAGVoB,GAAW,GACXe,YAAW,WACThB,EAAW,QACV,KA5BO,QA8BZH,EAAW,IACXC,EAAa,IA/BD,uCAkCRV,EAAY,CAAEP,KAAMhB,EAASiB,OAAQhB,GAlC7B,UAmCOgD,EAAqB1B,GAnC5B,QAmCRV,EAnCQ,OAoCdkB,EAAWrB,EAAQ+B,OAAO5B,EAAO6B,KAAK7B,SACtCsB,EAAW,SAAD,OAAUtB,EAAO6B,KAAK7B,OAAOG,KAA7B,kBACVmC,YAAW,WACThB,EAAW,QACV,KACHH,EAAW,IACXC,EAAa,IA1CC,0DAAH,sDAsDf,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcb,QAASA,EAASC,QAASA,IACzC,kBAAC,EAAD,CAAQd,mBAnEe,SAAAqC,GACzBV,EAAUU,EAAMQ,OAAOjD,QAkE2BK,UAAWA,IAC3D,kBAAC,EAAD,CACET,YAAa4C,EACb7C,iBA9EmB,SAAA8C,GACvBZ,EAAWY,EAAMQ,OAAOjD,QA8EpBN,mBA3EqB,SAAA+C,GACzBX,EAAaW,EAAMQ,OAAOjD,QA2EtBH,QAASA,EACTC,UAAWA,IAEb,uCACA,kBAAC,EAAD,CAASS,QAvEO,KAAdF,EAAyBE,EACtBA,EAAQ2C,QAAO,SAAAxC,GAAM,OAAIA,EAAOG,KAAKsC,MAAM9C,MAsEXG,aArBpB,SAAAiC,GACnB,GAAIG,OAAOC,QAAQ,oCAAqC,CACtD,IAAMjC,EAAKwC,OAAOX,EAAMQ,OAAOI,QAAQzC,IACvCkC,EAA2BlC,GAC3BgB,EAAWrB,EAAQ2C,QAAO,SAAAxC,GAAM,OAAIA,EAAOE,KAAOA,Y,MCrFxD0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f3ea26ca.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = ({\n  handleNumberChange,\n  handleNameChange,\n  handleClick,\n  newName,\n  newNumber,\n}) => (\n  <form>\n    <div>\n      name: <input onChange={handleNameChange} value={newName} />\n      number: <input onChange={handleNumberChange} value={newNumber} />\n    </div>\n    <div>\n      <button onClick={handleClick} type=\"submit\">\n        add\n      </button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Search = ({ handleSearchChange, newSearch }) => (\n  <input onChange={handleSearchChange} value={newSearch} />\n);\n\nexport default Search;\n","import React from 'react';\n\nconst Persons = ({ persons, handleDelete }) => {\n  return persons.map(person => (\n    <div key={person.id}>\n      <li>\n        {person.name}: {person.number}{' '}\n        <button onClick={handleDelete} data-id={person.id}>\n          delete\n        </button>\n      </li>\n    </div>\n  ));\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message, isError }) => {\n  if (message)\n    return <div className={isError ? 'error' : 'notification'}>{message}</div>;\n  return null;\n};\n\nexport default Notification;\n","import React from 'react';\nimport axios from 'axios';\n\nconst create = personObj => {\n  return axios.post('api/persons', personObj);\n};\n\nconst updatePerson = foundPerson => {\n  return axios.put(`/api/persons/${foundPerson.id}`, foundPerson);\n};\n\nconst removePerson = id => {\n  return axios.delete(`/api/persons/${id}`);\n};\n\nexport default { create, removePerson, updatePerson };\n","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Search from './components/Search';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/PersonService';\nimport axios from 'axios';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newSearch, setSearch] = useState('');\n  const [message, setMessage] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const fetched = await axios.get('/api/persons');\n      setPersons(persons.concat(fetched.data));\n    })();\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const filteredPersons = () => {\n    if (newSearch === '') return persons;\n    return persons.filter(person => person.name.match(newSearch));\n  };\n\n  const addPerson = async event => {\n    event.preventDefault();\n    const foundPerson = persons.find(person => person.name === newName);\n    if (foundPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook. Would you like to replace the number?`\n        )\n      ) {\n        foundPerson.number = newNumber;\n        try {\n          const updatedPerson = await personService.updatePerson(foundPerson);\n          setPersons(\n            persons.map(person =>\n              person.id !== updatedPerson.id ? person : updatedPerson.data\n            )\n          );\n          setMessage(`Updated ${updatedPerson.data.name}'s number`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        } catch (err) {\n          setMessage(\n            `${foundPerson.name}'s has already been removed from the phonebook`\n          );\n          setIsError(true);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }\n        setNewName('');\n        setNewNumber('');\n      }\n    } else {\n      const personObj = { name: newName, number: newNumber };\n      const person = await personService.create(personObj);\n      setPersons(persons.concat(person.data.person));\n      setMessage(`Added ${person.data.person.name} to phonebook`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const handleDelete = event => {\n    if (window.confirm('Are you sure you want to delete?')) {\n      const id = Number(event.target.dataset.id);\n      personService.removePerson(id);\n      setPersons(persons.filter(person => person.id !== id));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isError={isError} />\n      <Search handleSearchChange={handleSearchChange} newSearch={newSearch} />\n      <PersonForm\n        handleClick={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}